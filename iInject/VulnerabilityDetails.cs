using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace iInject {
	/// <summary>
	/// Provides information about a single vulnerability that was found in a page.
	/// </summary>
	public class VulnerabilityDetails {
		/// <summary>
		/// Gets the form that this vulnerability was found in.
		/// </summary>
		public WebForm Form { get; private set; }

		/// <summary>
		/// Gets the control that was found to be vulnerable to this exploit.
		/// </summary>
		public WebFormControl VulnerableControl { get; private set; }

		/// <summary>
		/// Gets the vulnerability scanner that detected this exploit.
		/// </summary>
		public IVulnerabilityScanner Scanner { get; private set; }

		/// <summary>
		/// Creates a new instance of VulnerabilityDetails with the given data.
		/// </summary>
		public VulnerabilityDetails(WebForm Form, WebFormControl Control, IVulnerabilityScanner Scanner) {
			this.Form = Form;
			this.Scanner = Scanner;
			this.VulnerableControl = Control;
		}

		/// <summary>
		/// Returns a human readable representation of what vulnerability occurred and when.
		/// </summary>
		public override string ToString() {
			return "Vulnerability: " + this.Scanner.VulnerabilityName + " through " + Scanner.Name + " on the '" + VulnerableControl.Name + "' control at '" + Form.Target + "'.";
		}
	}
}
